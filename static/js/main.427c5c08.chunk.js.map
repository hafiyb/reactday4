{"version":3,"sources":["logo.svg","components/list/index.js","containers/dashboard/index.js","App.js","reportWebVitals.js","index.js"],"names":["List","className","onClick","this","props","click","title","time","React","Component","Dashboard","state","items","addNew","bind","value","filterItem","filter","list","key","setState","console","log","_inputElement","newItem","Date","now","type","placeholder","ref","a","style","width","map","delete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,I,sDCGMA,E,4JAEjB,WACI,OACI,sBAAKC,UAAU,8BAA8BC,QAASC,KAAKC,MAAMC,MAAjE,UACI,oBAAIJ,UAAU,GAAd,SAAkBE,KAAKC,MAAME,QAC7B,4BAAIH,KAAKC,MAAMG,c,GANGC,IAAMC,WCCnBC,E,kDACrB,WAAYN,GAAO,IAAD,8BACd,cAAMA,IAEDO,MAAM,CACPC,MAAO,IAGX,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBAPA,E,0CAUlB,SAAOC,GACH,IAAMC,EAAab,KAAKQ,MAAMC,MAAMK,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,MAAQJ,KACjEZ,KAAKiB,SAAS,CAACR,MAAMI,M,oBAGzB,WAII,GAHAK,QAAQC,IAAI,QACZD,QAAQC,IAAInB,KAAKoB,cAAcR,OAEA,IAA5BZ,KAAKoB,cAAcR,MAAY,CAE9B,IAAMS,EAAU,CACZlB,MAAOH,KAAKoB,cAAcR,MAC1BI,IAAKM,KAAKC,OAcdvB,KAAKiB,SAAS,CAACR,MAAM,GAAD,mBAAMT,KAAKQ,MAAMC,OAAjB,CAAwBY,MAI5CH,QAAQC,IAAInB,KAAKQ,MAAMC,OAEvBT,KAAKoB,cAAcR,MAAQ,M,oBAInC,WAAS,IAAD,OACJ,OACI,sBAAKd,UAAU,iEAAf,UACI,sBAAKA,UAAU,6CAAf,UACQ,uBAAOA,UAAU,kEAAkE0B,KAAK,OAAOC,YAAY,cAAcC,IAAK,SAACC,GAAD,OAAO,EAAKP,cAAgBO,KAC1J,wBAAQ5B,QAASC,KAAKU,OAAQZ,UAAU,wCAAxC,yBAER,sBAAKA,UAAU,2CAA2C8B,MAAO,CAACC,MAAM,QAAxE,UAEI,oBAAI/B,UAAU,iCAAd,sBAEIE,KAAKQ,MAAMC,MAAMqB,KAAK,SAAAf,GAAI,OACtB,cAAC,EAAD,CAAMZ,MAAOY,EAAKZ,MAAOC,KAAMW,EAAKC,IAAKd,MAAO,kBAAM,EAAK6B,OAAOhB,EAAKC,qB,GA5DxDX,IAAMC,WCe9B0B,MARf,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,OCFSmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.427c5c08.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\n\r\nexport default class List extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"border-b-2 border-black m-1\" onClick={this.props.click}>\r\n                <h2 className=\"\">{this.props.title}</h2>\r\n                <p>{this.props.time}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport List from \"../../components/list\"\r\n\r\n\r\nexport default class Dashboard extends React.Component{\r\nconstructor(props){\r\n    super(props);\r\n    \r\n    this.state={\r\n        items: [],\r\n    }\r\n\r\n    this.addNew = this.addNew.bind(this);\r\n}\r\n\r\ndelete(value){\r\n    const filterItem = this.state.items.filter( list => list.key !== value)\r\n    this.setState({items:filterItem})\r\n}\r\n\r\naddNew(){\r\n    console.log('test')\r\n    console.log(this._inputElement.value)\r\n\r\n    if(this._inputElement.value != ''){\r\n\r\n        const newItem = {\r\n            title: this._inputElement.value,\r\n            key: Date.now()\r\n        }\r\n\r\n        // this.setState({items : this._inputElement.value}, () => console.log(this.state.items))\r\n\r\n        // this.setState(\r\n        //     (prevState) => {\r\n        //         return {\r\n        //             items: prevState.items.concat(newItem)\r\n        //         }\r\n        //     }, \r\n        //     () => console.log(this.state.items)\r\n        // )\r\n\r\n        this.setState({items: [...this.state.items, newItem]})\r\n\r\n        // this.state.items.push(newItem)\r\n\r\n        console.log(this.state.items)\r\n\r\n        this._inputElement.value = '';\r\n    }\r\n}\r\n\r\nrender(){\r\n    return(\r\n        <div className=\"flex flex-col justify-center items-center bg-yellow-600 h-full\">\r\n            <div className=\"flex flex-row justify-between items-center\" >\r\n                    <input className=\"p-1 border-2 border-black rounded-md h-3/4 placeholder-gray-800\" type=\"text\" placeholder=\"What to do?\" ref={(a) => this._inputElement = a} />\r\n                    <button onClick={this.addNew} className=\"rounded border-2 border-black m-4 p-1\">Add item</button>\r\n            </div>\r\n            <div className=\"flex flex-col rounded-lg bg-gray-100 p-2\" style={{width:'50vw'}}>\r\n            {/* <List /> */}\r\n                <h1 className=\"m-4 border-b-2 border-gray-600\">To do : </h1>\r\n                {\r\n                    this.state.items.map( list => (\r\n                        <List title={list.title} time={list.key} click={() => this.delete(list.key)} />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from './containers/dashboard';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\n\nfunction App() {\n  return(\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}